name: On Push Main

on:
  push:
    branches:
      - main

jobs:
  InstallDeps:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install Requirements
        run:  pip install -r src/requirements.txt

#  Tests:
#    needs: [ InstallDeps ]
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Unit Test
#        run: python -m unittest -v test

#  SonarCloud:
#    needs: [ InstallDeps ]
#    name: SonarCloud
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - name: SonarCloud Scan
#        uses: SonarSource/sonarcloud-github-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  BuildAndPushImage:
    needs: [ InstallDeps ] # todo: add Tests and SonarCloud
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      #      - name: New Relic License
      #        run: |
      #          sed -i "s/licensekey/${{ secrets.NEW_RELIC_LICENSE_KEY }}/g" Dockerfile

      - name: Docker Login
        env:
            GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        run: |
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > key.json
          cat key.json | docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev/

      - name: Build Image & Push
        env:
          ARTIFACT_REGISTRY: ${{ secrets.ARTIFACT_REGISTRY }}
        run: |
          docker build -t ${{ secrets.ARTIFACT_REGISTRY }}/backend:latest .
          docker push ${{ secrets.ARTIFACT_REGISTRY }}/backend:latest

#      - name: Docker Login
#        env:
#          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
#        run: |
#          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > key.json
#          cat key.json | docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev/
#
#      - name: Push Image
#        env:
#          ARTIFACT_REGISTRY: ${{ secrets.ARTIFACT_REGISTRY }}
#        run: |
#          docker push ${{ secrets.ARTIFACT_REGISTRY }}/backend:latest

  Deploy:
    needs: BuildAndPushImage
    runs-on: ubuntu-latest

    steps:
     - name: Checkout Repo
       uses: actions/checkout@v2

    #  - name: Deploy Heroku
    #    env:
    #      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
    #    run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web

     - name: Auth GCP AppEngine
       env:
         GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
       uses: 'google-github-actions/auth@v0'
       with:
         credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

     - name: Deploy to App Engine
       id: appengine
       env:
         ARTIFACT_REGISTRY: ${{ secrets.ARTIFACT_REGISTRY }}
         CLOUD_SQL_CONNECTION_NAME: ${{ secrets.CLOUD_SQL_CONNECTION_NAME }}
         CLOUD_SQL_DATABASE_NAME: ${{ secrets.CLOUD_SQL_DATABASE_NAME }}
         CLOUD_SQL_PASSWORD: ${{ secrets.CLOUD_SQL_PASSWORD }}
         CLOUD_SQL_USERNAME: ${{ secrets.CLOUD_SQL_USERNAME }}
       uses: 'google-github-actions/deploy-appengine@v0'
       with:
         image_url: ${{ secrets.ARTIFACT_REGISTRY }}/backend:latest

    #  - name: Prod Check
    #    run: 'curl "${{ steps.appengine.outputs.url }}"'
